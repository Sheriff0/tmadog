function! M4_cond_wrap_fn (a, body = [], delim = '<>< ><>', macro = '', d = 0)

	let l:delim = (type(a:delim) == v:t_string)? split (a:delim) : a:delim
	
	let l = len(l:delim)
	let [st, end] = (l > 1)? l:delim[:1] : (l > 0)? [l:delim[0], '$'] : ['Â£', '$']

	if type(a:body) == v:t_string
		let l:body = split (a:body, "\n")

	else
		let l:body = a:body
	endif

	let config = toupper("config_" . a:a)
	let l:macro = a:macro
	
	if len(l:macro)

	    let l:lines = ["define(" . st . macro . end . ",", st . "dnl"]

	    call extend (l:lines, l:body, len(l:lines)) 

	    call extend (l:lines, [end . "dnl" , ")dnl", "dnl", "ifdef(" , st . config . end . "," , macro . ",", st . end . "dnl", ")dnl"], len(l:lines))

	else
	    let l:lines = ["ifdef(" , st . config . end . ",", st . "dnl"]

	    call extend (l:lines, l:body, len(l:lines)) 

	    call extend (l:lines, [end . ",", st . end . "dnl", ")dnl"], len(l:lines))


	endif

	if a:d == 1
		call append(line(".") - 1, l:lines)
	endif

	return l:lines

endfunc
